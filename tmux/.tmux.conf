# Karl's tmux config
#
# Wishlist:
# * Can hterm use alt-v as paste?
#
# To reload this file:
#
#    tmux source-file ~/.tmux.conf
#


#
# Server Options (alphabetical)
#

# For some reason, the tmux devs insist this be screen or tmux
set -s default-terminal "screen-256color"

# This fixes problems in vim
# (The default setting of 500ms delays escape - insufferable)
set -s escape-time 0

# Allow tmux and child programs (e.g. vim) to copy to the chromebook clipboard
# Even remote ssh connections can do it, for demo script see
# https://github.com/chromium/hterm/blob/master/etc/osc52.sh
set -s set-clipboard on

# 24 bit color support with hterm
set -sa terminal-overrides ",xterm-256color*:Tc"



#
# Session Options (alphabetical)
#

# Start windows at 1 instead of 0.  Helps with direct alt-N access
set -g base-index 1

set -g history-limit 50000

# With mouse mode, you can:
# - click on windows (Tabs)
# - click on panes
# - drag the pane lines to resize panes
# - mouse wheel through windows (if over tabs)
# - enter scrollback by mouse wheel scolling up
# - exit scrollback by mouse wheel scolling down to end
#
# Note that selected text is automatically copied to tmux buffer,
# and copied to chromebook clipboard via osc-52
set -g mouse on  

# Use alt-j (most ergonomic) as the prefix key for tmux.
# The default, ctrl-b, is already taken by vim/less and annoys me to type twice
set -g prefix m-j
#set -g prefix2 m-t

# Renumber all windows when one is closed
# Also, this makes new windows always open on the right hand side
set -g renumber-windows on

# Update every second
set -g status-interval 1

# Use VI mode when entering text/command
set -g status-keys vi

# Status/tab bar on top
set -g status-position top

# Don't show clock
set -g status-left ' '

# Remove clutter
set -g status-right 'TMux'

set -g visual-bell off


#
# Window Options (alphabetical)
#

# What to do about window (e.g. tab) names:
# Options are:
#
# * Do nothing.  Just use the window list (choose-tree) and the prompt for context.
#   There is not a lot of space to work with anyway in the tab list.
#   I find this ugly, as you just see bash,bash,ssh,ssh,...
#
# * Explicitly set to user@host (via another PS1 escape sequence)
#   This seems to corrupt the prompt a bit - it shows an extra [
#
# * Set to the first N chars of the pane title (which is already set by PS1).
#   This is basically what gnome-terminal does.  This is also fine.
#   But I really wish I could split until the first space char.
#
#   Note that under any scenario, you can always rename windows manually
#   by typing PREFIX + r, and it will not change.
#

# Keep window name updated to a (short snippet) of pane title (e.g. like gnome-terminal)
# This will NOT override any manually named windows.
set -g automatic-rename on
set -g automatic-rename-format '#{=15:pane_title}'

# This should be autodetected by EDITOR, but be explicit
setw -g mode-keys vi

# Window Activity Monitoring - not used
setw -g monitor-activity off

setw -g pane-base-index 1

# So ctrl-pageup works in vim tabs
setw -g xterm-keys on



#
# Visual Theme
# Gray, no distractions, no clutter
#

# A color to stand out (renaming a window, entering a command)
set -g message-style                 'fg=#ffffff bg=#5c008e'
set -g message-command-style         'fg=#ffffff bg=#5c008e'

# The right part of the status line
set -g status-style                 'fg=#444444 bg=#dddddd'
# Active window name (tab)
setw -g window-status-current-style 'fg=#444444,bold bg=#f8f8f8'
# Inactive window names (tabs)
setw -g window-status-style         'fg=#777777,dim bg=#dddddd'

# Don't show */- window flags or indexes.
# You can put unicode text symbols in here, but I'm just not feeling the clutter
setw -g window-status-current-format    '#{window_name}'
setw -g window-status-format            '#{window_name}'
set -g window-status-separator      ' '



# 
# Keybindings
#

#
# I use alt-* commands to control tmux.
# These are generally not used by other programs, however a few are,
# so we will not overwrite any of the following:
# - alt-b, alt-f: back/forward words in bash 
#

# Custom direct keyboard shortcuts (prefix key is NOT used)
# Note: meta (m-) means Alt in tmux speak
bind    -T root   M-space      new-window
bind    -T root   M-w          choose-tree -w

# Switching tabs (windows)
bind    -T root   M-p          previous-window
bind    -T root   M-n          next-window

# Now this is cooking with gas.
# To use in hterm, make sure you have these (xterm) keybindings:
# https://www.staldal.nu/tech/2009/01/10/how-to-use-ctrl-tab-in-gnu-screen/
# {
#  "ctrl-tab": "'\u001b[27;5;9~'",
#  "ctrl-shift-tab": "'\u001b[27;6;9~'"
# }
bind    -T root   c-s-tab        previous-window
bind    -T root   c-tab          next-window

# Direct tab (window) select
bind    -T root       M-1                 select-window -t :=1
bind    -T root       M-2                 select-window -t :=2
bind    -T root       M-3                 select-window -t :=3
bind    -T root       M-4                 select-window -t :=4
bind    -T root       M-5                 select-window -t :=5
bind    -T root       M-6                 select-window -t :=6
bind    -T root       M-7                 select-window -t :=7
bind    -T root       M-8                 select-window -t :=8
bind    -T root       M-9                 select-window -t :=9
bind    -T root       M-0                 select-window -t :=10

# To move a tab (window) to the left/right.  (Change its order)
bind    -T root      M-[       swap-window -t -1      
bind    -T root      M-]       swap-window -t +1      

# Alt-v is tmux paste (would love to set this in hterm, but doesn't seem possible)
# To paste the chromebook clipboard (if it different), use ctrl-shift-v
bind    -T root        M-v      paste-buffer

# Alt-pageup to start scrollback (enter copy mode).
# Once in scrollback, alt or regular pageup/pagedown works
# In scrollback (vi mode), press enter to copy selected text and exit
# Press q or scroll to end to leave scrollback (copy) mode
# Note to locally scroll in hterm (which isn't useful with tmux), use shift-pageup
bind    -T root   M-PPage      copy-mode -eu
bind    -T root   M-NPage      run 'true'
bind    -T copy-mode-vi  M-NPage  send-keys -X page-down

# Copy more vi-like
bind    -T copy-mode-vi     y   send-keys -X copy-selection-and-cancel
bind    -T copy-mode-vi     v   send-keys -X begin-selection


#
# Keybindings using PREFIX
#

# Split into panes
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Rename window - more sensible mmnemonic
bind r command-prompt -I "#W" "rename-window '%%'"

# Choose which buffer to paste interactively from a list 
bind v choose-buffer

